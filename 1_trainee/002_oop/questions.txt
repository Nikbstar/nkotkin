1. Что такое ООП?
    Подход (методология) к программированию ориетированный на объекты.
    Представление программы в виде совокупности объектов, каждый из которых является экземпляром определенного класса,
        а классы образуют иерархию наследования.

2. Базовые концепции ООП?
    - Инкапсуляция;
    - наследование;
    - Полиморфизм;
    ? Абстракция.

3. Укажите из каких элементов состоит класс.
    Класс состоит из полей (переменные более элементарных типов) и методов (функции для работы с этими полями).

4. Что такое конструктор? Типы конструкторов?
    Это метод, который вызывается при созданнии объекта.
    - конструктор с параметрами;
    - конструктор по умолчанию.


5. Можно ли наследовать конструктор?
    Нет, но ему можно передать аргументы с помощью super.

6. Что такое перегрузка конструктора?
    Это создание конструкторов с другим набором аргументов.

7. Что такое статический метод?
    Это методв, который можно вызвать без создания объекта, напрямую через имя класса.

8. Что такое не статический метод?
    Это метод, для работы которого необхоим объект.

9. Для чего используется ключевое слово this?
    Чтобы обращаться к полям и методам данного класса (объекта).

10. Какой класс является базовый родительным классов для всех классов?
    Object

11. Что такое наследование? Приведите примеры из реальной жизни.
    Это когда один объект перенимает все публичные поля и методы другого объекта.
    Млекопитающиеся > Киты > Голубой кит, горбатый кит.

12. Опишите процесс создания нового объекта.
    Объект создается с помощью ключевого слова new, которое вызывает конструктор класса,
        который инициилизирует все поля и методы и создаёт объект.
    При первом обращении к классу подгружаются все статические поля, методы и блоки инициализации.
    При создании объекта подгружаются все нестатические поля и методы по порядку.
    Потом подгружается конструктор этого объекта.

13. Как вызвать метод из родительского класса?
    с использованием ключевого слова super.

14. Что такое переопределение метода?
    Это возможность по своему написать метод родительского класса.

15. Можно ли переопределить статический метод?
    Нет, статический метод создается при инициализации класса один на все объекты

16. Что такое виртуальная функция и используются ли они в Java?
    Это функция, котора может быть переопределена наследником.
    В Java практически все функции виртуальные (private функции не могут быть переопределены
        в связи с правами видимости)

17. Что такое перегрузка метода?
    Это создание того же метода с другими аргументами.

18. Можно ли изменить тип возвращаемых тип данных при перегрузке метода?
    Можно, если аргументы отличаются, иначе JVM не поймет какой метод ей нужно вызвать.

19. Что такое множественное наследование? Как его можно реализовать в Java.
    Это наследование класса от нескольких суперклассов одновременно.
    В Java запрещено множественное наследование главным образом из-за ромбовидной проблемы.
    В Java множественное наследование разрешено в интерфейсах.
    ?Если есть необходимость использовать методы из разных классов, то можно воспользоваться
    ?    Композицией (в третем классе создать два необходимых обхекта, добавить методы, которые
    ?    обращаются к нужным методам этих объектов. И наследоваться от этого класса).

20. Что такое полиморфизм? Приведите примеры из реальной жизни.
    Это возможность работать с несколькими типами, как будьто это один и тот же тип, в то же время
        поведение каждого типа будет уникальным в зависитости от его реализации.
    Это один интерфейс, множество реализаций.
    Есть корзина для белья, накидали в нее простыню, рубашки, штаны, полотенца, и работаем с этими
        всеми разными типами как с одним типом - бельё. В стиральной машинке каждый объект (тип ткани)
        будет стираться по своему.

21. Что такое инкапсуляция?
    Это скрытие полей объектов.
    Это ограничение доступа к определенным методами и полям.


22. Как реализована инкапсуляция в Java?
    Модификаторами доступа private скрываются поля объекта, и при необходимости разрешается к ним
        подкотрольный доступ через геттеры и сеттеры.

23. Что такое абстракция?
    Это абстрагирование от некоторых конкретных деталей объекта.

24. Как реализована абстракция в Java?
    С помощью ключевого слова abstract перед именем класса. В таком классе могут быть абстрактные
        методы, которые обязан реализовать дочерний класс. От абстрактного класса нельзя создать объект.

25. Что такое интерфейс?
    Это тип данных, который может содержать лишь константы, абстрактные методы (так же неабстрактные
        методы default и static). У них нету конструкторов.
    Инерфейс позволяет создавать общей тип данных для разных объектов (т.е. использование интерфейса
        гарантирует наличие определенного метода у объекта).

26. Что такое внутренний класс? Типы внутренних классов.
    Это класс вложенный в другой класс
    - InnerClass
        public class OuterClass {
            public class InnerClass{
            }
        }
        создание:
        OuterClass outerClass = new OuterClass();
        OuterClass.InnerClass innerClass = outerClass.new InnerClass();
    - StaticInnerClass
        public class OuterClass {
            public static class StaticInnerClass{
            }
        }
        создание:
        OuterClass.StaticInnerClass staticInnerClass = new OuterClass.StaticInnerClass();
    - LocalClass
        public class OuterClass {
            public void someMethod(){
                class LocalClass{
                }
            }
        }
    - Анонимный класс
        public class OuterClass {
            public void someMethod(){
                Callable callable = new Callable() {
                    @Override
                    public Object call() throws Exception {
                        return null;
                    }
                };
            }
        }

27. Что такое анонимный класс.
    Это класс, который сразу создаеся и реализуется (без имени класса) от суперкласса или интерфейса.

28. Для чего используется конструктор в абстрактном классе?
    Для инициализации полей класса.

29.Можно ли создать анонимный класс. если в классе нет конструктора по умолчанию?
    При создании анонимного класса в скобках можно передать аргументы для недефолтового конструктора.

30.Что такое композиция?
    Это когда объект, создается внутри основного объекта, принадлежит только ему и унечтожается перед
        уничтожением основного объекта.
    (Например стены у комнаты)

31.Что такое агрегация?
    Это когда объект, может переходить от одного основного объекта к другому.
    (Например мебель в комнате)

32.Какие типы исключительных ситуаций бывают?
    Суперкласс исключений - Throwable - тут вся логика, остальные подклассы нужны чисто чтобы определить
        тип исключений
    - Exception (checked) - !обязательные для обработки! обычно связаны с бизнеслогикой (например нет
        файла, который необходимо прочитать. Не могу подключиться к базе данных)
    - RuntimeException (unchecked) - результат некорректного программирования (обращение к
        несуществующим элементам массива): NullPointerException, NumberFormatException,
        ClassCastException, IndexOutOfBoundsException
    - Error (unchecked) - ошибки ОС или JVM (закончилась память

33. Как обрабатываются исключительные ситуации?
    или с помощью метода try-catch или передает его выше, тому методу который его вызвал.

34. Назовите основные методы класса Object?
    - equals
    - hashCode
    - toString
    - getClass